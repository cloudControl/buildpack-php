#!/usr/bin/env bash

# Copyright 2015 cloudControl GmbH
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# bin/compile <build-dir> <cache-dir>

set -eo pipefail

if [ "$#" -ne 2 ]; then
  echo "usage: bin/compile <build-dir> <cache-dir>"
  exit 1
fi

BIN_DIR=$(readlink -f $(dirname $0))
BP_DIR=$(readlink -f $(dirname $BIN_DIR))
BUILD_DIR=$1
CACHE_DIR=$2

export CACHE_DIR

APACHE_PATH="$BUILD_DIR/apache"
PHP_PATH="$BUILD_DIR/php"
PHP_CONFIGS_PATH="${PHP_PATH}/conf"

CODE_DIR=code
PROJECT_ROOT=$BUILD_DIR/$CODE_DIR

ZEND_MODULE_API_VERSION=20100525
ext_dir=${BUILD_DIR}/usr/lib/php5/${ZEND_MODULE_API_VERSION}
PHP_MAJOR_VERSION=5
PHP_MINOR_VERSION=6

cd $BUILD_DIR

source $BIN_DIR/util/helper.sh
source $BIN_DIR/util/framework.sh

# Load buildpack environment
if [[ -f .buildpack/envrc ]]; then
  source .buildpack/envrc
fi

source $BIN_DIR/util/blackfire.sh
source $BIN_DIR/util/newrelic.sh

# move everything in BUILD_DIR except buildpack-specific files to PROJECT_ROOT
TMP=$(mktemp -d --tmpdir=.)
find . -mindepth 1 -maxdepth 1 -not -regex "./Procfile\|$TMP\|./.buildpack" -exec mv --target-directory="$TMP" '--' '{}' +
mv "$TMP" "$PROJECT_ROOT"
ln -s code www

mkdir -p $APACHE_PATH/logs
mkdir -p $APACHE_PATH/conf/{share,local,user}
mkdir -p $PHP_PATH/{box,conf,logs}
mkdir -p $BUILD_DIR/.profile.d

PHP_VERSION_NUMBER="~5.6"
exts=(amqp bcmath bz2 calendar curl dba exif ftp gd gettext imagick intl mbstring mcrypt memcached mongo mssql mysql mysqli mysqlnd newrelic oauth pdo pdo_dblib pdo_mysql pdo_pgsql pdo_sqlite pgsql shmop soap sockets sqlite3 sysvmsg sysvsem sysvshm wddx xmlrpc xsl zip zlib)

if [[ ! -f $PROJECT_ROOT/composer.json ]]; then
  echo "No composer.json found, using php-64bit: ${PHP_VERSION_NUMBER} and default extensions." | indent_head
else
  # Caching: pre-install
  CACHED_DIRS=$($BP_DIR/bin/jq -e -r '.config["vendor-dir"]' $PROJECT_ROOT/composer.json) || CACHED_DIRS="vendor"

  mkdir -p $CACHE_DIR
  for dir in $CACHED_DIRS; do
    if [[ -e $PROJECT_ROOT/$dir ]]; then
      cp -R $PROJECT_ROOT/$dir $CACHE_DIR/ &> /dev/null || true
    fi

    mkdir -p $PROJECT_ROOT/$dir
    cp -R $CACHE_DIR/${dir##*/}/* $PROJECT_ROOT/$dir/ &> /dev/null || true
  done

  # Check for custom php version
  COMPOSER_PHP_VERSION_NUMBER=$($BP_DIR/bin/jq --raw-output '.require | .["php-64bit"]' $PROJECT_ROOT/composer.json)

  if [[ "$COMPOSER_PHP_VERSION_NUMBER" != "null" ]]; then
    echo "Found php version definition ${COMPOSER_PHP_VERSION_NUMBER}" | indent_head
    PHP_VERSION_NUMBER=${COMPOSER_PHP_VERSION_NUMBER}
  else
    echo "No php version defined in composer.json, using php-64bit: ${PHP_VERSION_NUMBER}." | indent_head
  fi

  # Install extensions
  composer_exts=($($BP_DIR/bin/jq -r '.require | keys | map(select(startswith("ext-"))) | map(.[4:])|.[]' $PROJECT_ROOT/composer.json))

  if [ ${#composer_exts[@]} -ne 0 ]; then
    exts=(${composer_exts[@]})
  else
    echo "No extensions found in composer.json, adding default extensions." | indent_head
  fi
fi

RESPONSEFILE=/tmp/semverioresponse.txt
status=$(curl -s -w %{http_code} "https://semverio.${DOMAIN}/php/resolve/${PHP_VERSION_NUMBER}" -o $RESPONSEFILE)
RESPONSE=$(cat ${RESPONSEFILE})

if [[ $status != 200 ]]; then
  echo "WARN: Can not get ${PHP_VERSION_NUMBER} with error: ${RESPONSE}" | indent_head
  exit 1
fi

PHP_VERSION=php-${RESPONSE}
PHP_MINOR_VERSION=`echo $RESPONSE | cut -d '.' -f 2`
PHP_CONFIGS_PATH="/srv/www/${PHP_VERSION}/etc/conf.d"

echo "Using php version ${PHP_VERSION}" | indent_head
curl --silent --location "https://packages.${DOMAIN}/buildpack-php/${PHP_VERSION}.tar.bz2" | tar jx

ln -s ${BUILD_DIR}/${PHP_VERSION} /srv/www/${PHP_VERSION}
echo "export PATH=/srv/www/${PHP_VERSION}/sbin:/srv/www/${PHP_VERSION}/bin:\$PATH" >> .profile.d/php.sh
source .profile.d/php.sh
cp $BP_DIR/conf/.bashrc .

mkdir -p bin
cp $BP_DIR/bin/jq bin

ZEND_MODULE_API_VERSION2=`php -r 'echo phpinfo();' | grep -i 'Zend Extension =>' | cut -d ' ' -f 4`
ZEND_MODULE_API_VERSION=${ZEND_MODULE_API_VERSION2:1}
ext_dir=/app/${PHP_VERSION}/lib/php/extensions

cp $BP_DIR/conf/boot.sh $BUILD_DIR/boot.sh
# Make /app/code available
ln -s $BUILD_DIR/code /srv/www/www
ln -s $BUILD_DIR/code /srv/www/code

if [[ ${exts[*]} =~ "blackfire" ]]; then
  install_blackfire
fi

if [[ ${exts[*]} =~ "newrelic" ]]; then
  install_newrelic
fi

cp $BP_DIR/conf/boot.sh $BUILD_DIR/boot.sh

for ext in "${exts[@]}"; do
  echo "Loading extension: ${ext}" | indent_head
  echo "extension = ${ext}.so" >> ${PHP_CONFIGS_PATH}/extensions.ini
done

if [ -d .buildpack/php/conf ]; then
  cp .buildpack/php/conf/*.ini ${PHP_CONFIGS_PATH}/
fi

if [[ -f $PROJECT_ROOT/composer.json ]]; then
  # Install composer
  echo "Installing composer dependencies..." | indent_head
  if [[ ! -f $PROJECT_ROOT/composer.phar ]]; then
    curl --remote-name --silent --show-error https://getcomposer.org/installer
    php installer --quiet --install-dir=$PROJECT_ROOT
    rm installer
  fi

  php $PROJECT_ROOT/composer.phar install $COMPOSER_INSTALL_ARGS -n -d $PROJECT_ROOT/ | indent

  # Clean the Image
  rm $PROJECT_ROOT/composer.phar
  
  # Caching: post-install
  for dir in $CACHED_DIRS; do
    rm -rf $CACHE_DIR/${dir##*/}
    cp -R $PROJECT_ROOT/$dir $CACHE_DIR/
  done
fi

if [[ ${exts[*]} =~ "newrelic" ]]; then
  finalize_newrelic
fi

framework_detection

# set default values if not defined in user custom configuration files
if ! grep -q -s "DocumentRoot" .buildpack/apache/conf/*.conf ; then
  DOCUMENT_ROOT="/app/code/$WEBCONTENT"
  echo "DocumentRoot \"$DOCUMENT_ROOT\"" > $APACHE_PATH/conf/share/documentroot.conf
  cat >> $APACHE_PATH/conf/share/documentroot.conf <<EOF
<Directory "$DOCUMENT_ROOT">
  AllowOverride All
  Options SymlinksIfOwnerMatch
  Order Deny,Allow
  Allow from All
  DirectoryIndex index.php index.html index.htm
</Directory>
EOF
fi

if [ -f .buildpack/php-fpm/conf/php-fpm.ini ]; then
  php $BP_DIR/support/merge_conf.php $BP_DIR/conf/php-fpm.ini .buildpack/php-fpm/conf/php-fpm.ini $PHP_PATH/php-fpm.ini
else
  cp $BP_DIR/conf/php-fpm.ini $PHP_PATH
fi

cp $BP_DIR/conf/httpd.conf $APACHE_PATH/conf
if [ -d .buildpack/apache/conf ]; then
  cp .buildpack/apache/conf/* $APACHE_PATH/conf/user
fi
